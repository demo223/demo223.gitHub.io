(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{424:function(a,s,t){"use strict";t.r(s);var e=t(14),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"线程隔离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程隔离"}},[a._v("#")]),a._v(" 线程隔离")]),a._v(" "),s("h2",{attrs:{id:"threadlocal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal"}},[a._v("#")]),a._v(" ThreadLocal")]),a._v(" "),s("p",[s("code",[a._v("ThreadLocal")]),a._v(" 是 Java 提供的一个方便对象在本线程内不同方法中传递和获取的类。用它定义的变量，仅在本线程中可见和维护，不受其他线程的影响，与其他线程相互隔离。")]),a._v(" "),s("p",[a._v("虽然在本线程不同方法中使用变量，可以通过在方法中传入参数解决，但是当涉及多个方法甚至多个类时，为每个方法增加同样的参数将是一场噩梦，此时 "),s("code",[a._v("ThreadLocal")]),a._v(" 就能很好地解决这个问题。")]),a._v(" "),s("p",[a._v("它可以在本线程内任何一个地方赋值，在任何一个地方获取值，并且不用作为函数参数传入。这看起来像静态成员变量，但是 "),s("code",[a._v("ThreadLocal")]),a._v(" 变量相比静态成员变量的一个优势就是，"),s("strong",[s("code",[a._v("ThreadLocal")]),a._v(" 是线程隔离的")]),a._v("，"),s("strong",[a._v("其值不会受另一个线程的影响，也不用考虑加锁或值被其他线程篡改的问题")]),a._v("，而这些问题都是静态成员变量无法做到的。因此当涉及一个对象需要在很多不同方法之间传递时，应该考虑使用 "),s("code",[a._v("ThreadLocal")]),a._v(" 对象来简化代码。")]),a._v(" "),s("h3",{attrs:{id:"threadlocal作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal作用"}},[a._v("#")]),a._v(" ThreadLocal作用：")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("线程隔离")]),a._v(" "),s("p",[a._v("线程间："),s("code",[a._v("ThreadLocal")]),a._v("可实现"),s("strong",[a._v("资源对象")]),a._v("的线程隔离，让每个线程各用各的"),s("strong",[a._v("资源对象")]),a._v("，避免争用引发的线程安全问题。")])]),a._v(" "),s("li",[s("p",[a._v("资源共享")]),a._v(" "),s("p",[a._v("线程内："),s("code",[a._v("ThreadLocal")]),a._v("同时实现了线程内的资源共享。")])])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("ThreadLocal")]),a._v("为解决多线程程序的并发问题提供了一种新的思路")]),a._v(" "),s("li",[s("code",[a._v("ThreadLocal")]),a._v("的目的是为了解决多线程访问资源时的共享问题")])]),a._v(" "),s("h3",{attrs:{id:"threadlocal原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal原理"}},[a._v("#")]),a._v(" ThreadLocal原理：")]),a._v(" "),s("p",[s("code",[a._v("ThreadLocal")]),a._v(" 能在每个线程间进行隔离，其主要是靠在每个 "),s("code",[a._v("Thread")]),a._v(" 对象中维护一个 "),s("code",[a._v("ThreadLocalMap")]),a._v(" 来实现的。因为是线程中的对象，所以对其他线程不可见，从而达到隔离的目的。")]),a._v(" "),s("p",[a._v("那为什么是一个 "),s("code",[a._v("Map")]),a._v(" 结构呢？主要是因为一个线程中可能有多个 "),s("code",[a._v("ThreadLocal")]),a._v(" 对象，这就需要一个集合来进行存储区分，而用 "),s("code",[a._v("Map")]),a._v(" 可以更快地查找到相关的对象。")]),a._v(" "),s("p",[s("code",[a._v("ThreadLocalMap")]),a._v(" 是 "),s("code",[a._v("ThreadLocal")]),a._v(" 对象的一个静态内部类，内部维护一个 "),s("code",[a._v("Entry")]),a._v(" 数组，实现类似 "),s("code",[a._v("Map")]),a._v(" 的 "),s("code",[a._v("get")]),a._v(" 和 "),s("code",[a._v("put")]),a._v(" 等操作，为简单起见，可以将其看做是一个 "),s("code",[a._v("Map")]),a._v("，其中 "),s("code",[a._v("key")]),a._v(" 是 "),s("code",[a._v("ThreadLocal")]),a._v(" 实例，"),s("code",[a._v("value")]),a._v(" 是 "),s("code",[a._v("ThreadLocal")]),a._v(" 实例对象存储的值。")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("每个线程中都有一个独立的"),s("code",[a._v("ThreadLocalMap")]),a._v("类型的成员变量，用来存储资源对象。")]),a._v(" "),s("p",[a._v("1.调用"),s("code",[a._v("set")]),a._v("方法，就以"),s("code",[a._v("ThreadLocal")]),a._v("自己作为"),s("code",[a._v("key")]),a._v("，资源对象当作"),s("code",[a._v("value")]),a._v("，放入当前线程的 "),s("code",[a._v("ThreadLocalMap")]),a._v(" 集合中。")]),a._v(" "),s("p",[a._v("2.调用"),s("code",[a._v("get")]),a._v("方法，就是以"),s("code",[a._v("ThreadLocal")]),a._v("自己作为"),s("code",[a._v("key")]),a._v("，到当前线程中查找关联的资源值。")]),a._v(" "),s("p",[a._v("3.调用"),s("code",[a._v("remove")]),a._v("方法，就是以"),s("code",[a._v("ThreadLocal")]),a._v("自己作为"),s("code",[a._v("key")]),a._v("，移除当前线程中关联的资源值。")]),a._v(" "),s("p",[s("code",[a._v("ThreadLocalMap")]),a._v("：懒汉式，使用时才创建。")]),a._v(" "),s("h3",{attrs:{id:"内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏"}},[a._v("#")]),a._v(" 内存泄漏")]),a._v(" "),s("h4",{attrs:{id:"key的泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key的泄漏"}},[a._v("#")]),a._v(" key的泄漏")]),a._v(" "),s("p",[a._v("每一个 Thread 都有一个 "),s("code",[a._v("ThreadLocal.ThreadLocalMap")]),a._v(" 这样的类型变量，该变量的名字叫作 "),s("code",[a._v("threadLocals")]),a._v("。线程在访问了 "),s("code",[a._v("ThreadLocal")]),a._v(" 之后，都会在它的 "),s("code",[a._v("ThreadLocalMap")]),a._v(" 里面的 "),s("code",[a._v("Entry")]),a._v(" 中去维护该 "),s("code",[a._v("ThreadLocal")]),a._v(" 变量与具体实例的映射")]),a._v(" "),s("p",[a._v("我们可能会在业务代码中执行了 "),s("code",[a._v("ThreadLocal instance = null")]),a._v(" 操作，想清理掉这个 "),s("code",[a._v("ThreadLocal")]),a._v(" 实例，但是假设我们在 "),s("code",[a._v("ThreadLocalMap")]),a._v(" 的 "),s("code",[a._v("Entry")]),a._v(" 中强引用了 "),s("code",[a._v("ThreadLocal")]),a._v(" 实例，那么，虽然在业务代码中把 "),s("code",[a._v("ThreadLocal")]),a._v(" 实例置为了 "),s("code",[a._v("null")]),a._v("，但是在 "),s("code",[a._v("Thread")]),a._v(" 类中依然有这个引用链的存在")]),a._v(" "),s("p",[s("code",[a._v("GC")]),a._v(" 在垃圾回收的时候会进行可达性分析，它会发现这个 "),s("code",[a._v("ThreadLocal")]),a._v(" 对象依然是可达的，所以对于这个 "),s("code",[a._v("ThreadLocal")]),a._v(" 对象不会进行垃圾回收，这样的话就造成了内存泄漏的情况")]),a._v(" "),s("p",[a._v("JDK 开发者考虑到了这一点，所以 "),s("code",[a._v("ThreadLocalMap")]),a._v(" 中的 Entry 继承了 "),s("code",[a._v("WeakReference")]),a._v(" 弱引用，代码如下所示")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Entry")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("WeakReference")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/** The value associated with this ThreadLocal. */")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Entry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("hr"),a._v(" "),s("h4",{attrs:{id:"value-的泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#value-的泄漏"}},[a._v("#")]),a._v(" Value 的泄漏")]),a._v(" "),s("p",[s("code",[a._v("ThreadLocalMap")]),a._v(" 中的 "),s("code",[a._v("key")]),a._v(" 是一个 "),s("code",[a._v("ThreadLocal")]),a._v(" 对象，且是一个弱引用，而 "),s("code",[a._v("value")]),a._v(" 却是一个强引用")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("关于"),s("code",[a._v("ThreadLocalMap")]),a._v("中的key（即"),s("code",[a._v("ThreadLocal")]),a._v("）为什么是弱引用类型？")]),a._v(" "),s("blockquote",[s("ul",[s("li",[s("strong",[a._v("弱引用")]),a._v("（Weak Reference）：弱引用的对象拥有更短暂的生命周期。在垃圾回收器线程扫描它所管辖的内存区域的过程中，一旦发现了"),s("strong",[a._v("只具有弱引用")]),a._v("的对象，不管当前内存空间足够与否，都会回收它的内存")])])]),a._v(" "),s("p",[a._v("当线程内对"),s("code",[a._v("ThreadLocal")]),a._v("对象使用方法完毕后，此时没有对象指向"),s("code",[a._v("ThreadLocal")]),a._v("对象，按理说这个对象可以被回收了。但是由于"),s("code",[a._v("ThreadLocalMap")]),a._v("里以"),s("code",[a._v("key")]),a._v("，"),s("code",[a._v("value")]),a._v("的形式存储了"),s("code",[a._v("ThreadLocal")]),a._v("对象。导致仍然有链接指向"),s("code",[a._v("ThreadLocal")]),a._v("对象，不能被回收。")]),a._v(" "),s("p",[a._v("因此，Java语言将"),s("code",[a._v("Entry")]),a._v("类设置为弱引用，当线程内对"),s("code",[a._v("ThreadLocal")]),a._v("对象使用方法完毕后，JVM可以在垃圾回收时，清除"),s("code",[a._v("ThreadLocalMap")]),a._v("内的无效"),s("code",[a._v("Entry")]),a._v("对象。")]),a._v(" "),s("p",[a._v("由于"),s("code",[a._v("ThreadLocalMap")]),a._v("的生命周期和"),s("code",[a._v("Thread")]),a._v("（当前线程）一样长。")]),a._v(" "),s("p",[a._v("尽管Java语言做出了良好的设计，但是若当前线程一直不结束，又或者由于线程在线程池中，结束后不被销毁，那么ThreadLocal被回收后，"),s("code",[a._v("ThreadLocalMap")]),a._v("就会存在null，但value不为null的Entry。无效数据会移植存储在内存中，无法回收，导致内存泄露。")]),a._v(" "),s("h4",{attrs:{id:"解决办法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[a._v("#")]),a._v(" 解决办法")]),a._v(" "),s("p",[a._v("所以在使用完ThreadLocal对象后，要及时调用"),s("code",[a._v("ThreadLocal.remove()")]),a._v("方法，手动删除对应value。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"threadlocal使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal使用"}},[a._v("#")]),a._v(" ThreadLocal使用")]),a._v(" "),s("p",[a._v("例如：用户的操作信息在单次会话期间实现数据共享，我们可以把数据的存储放在线程内，为了简化代码，可以直接将数据在拦截器中存储在线程里面。")]),a._v(" "),s("p",[a._v("创建一个单例的工具类"),s("code",[a._v("ThreadContextUtil")])]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadContextUtil")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//定义ThreadLocal")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" threadLocal "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//  防止外部实例化此类")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadContextUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//设置数据到当前线程")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setEmployee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v(" employee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("employee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取当前线程的数据")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getEmployee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 释放当前线程的数据")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br")])]),s("p",[a._v("将数据存储到当前线程中")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadContextUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setEmployee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("employee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("将当前线程中的数据取出")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Employee")]),a._v(" employee "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadContextUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getEmployee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("blockquote",[s("p",[a._v("如果需要存储多个数据可以使用Map集合来存储，因为我们这里的"),s("code",[a._v("ThreadLocal")]),a._v("是同一个，所以也可以创建多个"),s("code",[a._v("ThreadLocal")]),a._v("对象来解决，完全可以创建多个"),s("code",[a._v("ThreadLocal")]),a._v("对象，它实际上放在一个map上。")])]),a._v(" "),s("p",[a._v("资源释放")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadContextUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//  释放资源")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h2",{attrs:{id:"线程安全补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程安全补充"}},[a._v("#")]),a._v(" 线程安全补充")]),a._v(" "),s("p",[a._v("在多线程并发环境中，要保证线程并发安全总体有2类方法。")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("使用"),s("strong",[a._v("锁")]),a._v("，在访问资源时是互斥的、原子性的。")]),a._v(" "),s("p",[a._v("这个锁可以是Synchronized方法 或 Lock。\n或者CAS方式的乐观锁。")])]),a._v(" "),s("li",[s("p",[a._v("使用"),s("strong",[a._v("线程隔离")]),a._v("的方法。")]),a._v(" "),s("p",[a._v("变量在线程内部，在实际运行过程中只有这个线程可以读取。")]),a._v(" "),s("p",[a._v("变量在线程外部定义，但是每个线程只能操作属于该线程的变量副本。即 "),s("code",[a._v("ThreadLocal")]),a._v("类型的变量。")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);