(window.webpackJsonp=window.webpackJsonp||[]).push([[240],{523:function(t,e,a){"use strict";a.r(e);var r=a(14),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"jmeter压力测试工具使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jmeter压力测试工具使用"}},[t._v("#")]),t._v(" JMeter压力测试工具使用")]),t._v(" "),e("h2",{attrs:{id:"一、安装下载jmeter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、安装下载jmeter"}},[t._v("#")]),t._v(" 一、安装下载JMeter")]),t._v(" "),e("p",[t._v("官网：http://jmeter.apache.org/download_jmeter.cgi")]),t._v(" "),e("p",[t._v("下载解压到指定文件目录")]),t._v(" "),e("p",[t._v("然后双击启动"),e("code",[t._v("jmeter.bat")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20230222162924712.png",alt:"image-20230222162924712"}})]),t._v(" "),e("h2",{attrs:{id:"二、使用介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、使用介绍"}},[t._v("#")]),t._v(" 二、使用介绍")]),t._v(" "),e("h3",{attrs:{id:"_1-创建线程组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建线程组"}},[t._v("#")]),t._v(" 1.创建线程组")]),t._v(" "),e("p",[t._v("在“测试计划”上右键 【添加】--\x3e【Threads(Users)】--\x3e【线程组】。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20230222163048799.png",alt:"image-20230222163048799"}})]),t._v(" "),e("p",[t._v("设置线程数和循环次数。我这里设置线程数为100，循环一次。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20230222163911487.png",alt:"image-20230222163911487"}})]),t._v(" "),e("p",[t._v("线程组：测试里每个任务都要线程去处理，所有我们后来的任务必须在线程组下面创建。可以在 “Test Plan（鼠标右击） -> 添加 ->Threads (Users) -> 线程组” 来建立它，然后在线程组面板里有几个输入栏：线程数、Ramp-Up Period (in seconds)、循环次数，其中 Ramp-Up Period (in seconds) 表示在这时间内创建完所有的线程。如有 8 个线程，Ramp-Up = 200 秒，那么线程的启动时间间隔为 200/8=25 秒，这样的好处是：一开始不会对服务器有太大的负载。")]),t._v(" "),e("p",[t._v("Number of Threads (users): 一个用户占一个线程， 100 个线程就是模拟 100 个用户")]),t._v(" "),e("p",[t._v("Ramp-Up Period (in seconds): 设置线程需要多长时间全部启动。如果线程数为 200 ，准备时长为 10 ，那么需要 1 秒钟启动 20 个线程。也就是每秒钟启动 20 个线程。")]),t._v(" "),e("p",[t._v("Loop Count: 每个线程发送请求的次数。如果线程数为 200 ，循环次数为 10 ，那么每个线程发送 10 次请求。总请求数为 200*10=2000 。如果勾选了 “永远”，那么所有线程")]),t._v(" "),e("p",[t._v("会一直发送请求，直到选择停止运行脚本。")]),t._v(" "),e("h3",{attrs:{id:"_2-配置元件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置元件"}},[t._v("#")]),t._v(" 2.配置元件")]),t._v(" "),e("p",[t._v("在我们刚刚创建的线程组上右键 【添加】--\x3e【配置元件】--\x3e【HTTP请求默认值】。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20230222164327945.png",alt:"image-20230222164327945"}})]),t._v(" "),e("p",[t._v("配置我们需要进行测试的程序协议、地址和端口")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20230222164733495.png",alt:"image-20230222164733495"}})]),t._v(" "),e("h3",{attrs:{id:"_3-构建http请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-构建http请求"}},[t._v("#")]),t._v(" 3.构建HTTP请求")]),t._v(" "),e("p",[t._v("在“线程组”右键 【添加-】->【samlper】--\x3e【HTTP 请求】设置我们需要测试的API的请求路径和数据。")]),t._v(" "),e("p",[t._v("和postman类似。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20230222165013852.png",alt:"image-20230222165013852"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20230222165640799.png",alt:"image-20230222165640799"}})])])}),[],!1,null,null,null);e.default=s.exports}}]);