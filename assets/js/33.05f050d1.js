(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{316:function(t,e,a){"use strict";a.r(e);var v=a(14),_=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令"}},[t._v("#")]),t._v(" Git常用命令")]),t._v(" "),e("h2",{attrs:{id:"git本地仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git本地仓库"}},[t._v("#")]),t._v(" git本地仓库")]),t._v(" "),e("p",[t._v("本地仓库常用命令如下：")]),t._v(" "),e("ul",[e("li",[t._v("git status 查看文件状态")]),t._v(" "),e("li",[t._v("git add 将文件的修改加入暂存区")]),t._v(" "),e("li",[t._v("git reset 将暂存区的文件取消暂存或者是切换到指定版本")]),t._v(" "),e("li",[t._v("git commit 将暂存区的文件修改提交到版本库")]),t._v(" "),e("li",[t._v("git push 推送到远程仓库")]),t._v(" "),e("li",[t._v("git log  查看日志")])]),t._v(" "),e("p",[t._v("测试环境：本地仓库mycode项目，在项目下创建了一个"),e("code",[t._v("hello.md")]),t._v("文件")]),t._v(" "),e("h3",{attrs:{id:"git-status"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-status"}},[t._v("#")]),t._v(" git status")]),t._v(" "),e("p",[e("code",[t._v("git status")]),t._v(" 用于查看文件状态")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20221212124001639.png",alt:"image-20221212124001639"}})]),t._v(" "),e("p",[e("code",[t._v("hello.md")]),t._v("文件为红色表示改文件没有添加到暂存区")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"git-add"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-add"}},[t._v("#")]),t._v(" git add")]),t._v(" "),e("p",[e("code",[t._v("git add")]),t._v(" 用于将文件的修改加入暂存区")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20221212124540688.png",alt:"image-20221212124540688"}})]),t._v(" "),e("p",[t._v("在执行"),e("code",[t._v("git add")]),t._v("操作后，再次执行"),e("code",[t._v("git status")]),t._v("操作查看可以看到``hello.md`文件已经变成了绿色，表示文件已经加到了暂存区")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"git-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),e("p",[t._v("主要有2个功能")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("将暂存区的文件取消暂存，与上一次的提交(commit)保持一致")]),t._v(" "),e("p",[e("code",[t._v("git reset")]),t._v("默认取消暂存区的所有文件，也可以使用")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git reset 文件名\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("取消暂存区的指定文件")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20221212125102065.png",alt:"image-20221212125102065"}})])]),t._v(" "),e("li",[e("p",[t._v("切换到指定版本")]),t._v(" "),e("p",[t._v("为了演示方便，先将"),e("code",[t._v("hello.md")]),t._v("文件提交到远程仓库，先看下面的几个命令的使用看完再看这个演示")]),t._v(" "),e("p",[t._v("我们在提交("),e("code",[t._v("commit")]),t._v(")了"),e("code",[t._v("hello.md")]),t._v("文件后，如果想回退到上次的commit位置，可以执行如下操作")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git reset --hard 版本号\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("我们可以通过"),e("code",[t._v("git log")]),t._v("操作来查看日志中的指定版本号")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20221212131344890.png",alt:"image-20221212131344890"}})]),t._v(" "),e("p",[t._v("执行回退命令")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git reset --hard 489f2ac47\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20221212132030725.png",alt:"image-20221212132030725"}})]),t._v(" "),e("p",[t._v("此时查看本地仓库发现"),e("code",[t._v("hello.md")]),t._v("文件已经不存在了")]),t._v(" "),e("blockquote",[e("p",[t._v("版本号输入前面几位就可以了，没必要输入整个版本号")])]),t._v(" "),e("hr")])]),t._v(" "),e("h3",{attrs:{id:"git-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[t._v("#")]),t._v(" git commit")]),t._v(" "),e("p",[e("code",[t._v("git commit")]),t._v(" 命令的作用是将暂存区的文件修改提交到版本库，命令格式："),e("code",[t._v("git commit -m '提交的信息'")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20221212130302255.png",alt:"image-20221212130302255"}})]),t._v(" "),e("h3",{attrs:{id:"git-push"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-push"}},[t._v("#")]),t._v(" git push")]),t._v(" "),e("p",[e("code",[t._v("git push")]),t._v(" 用于推送到远程仓库")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20221212130543326.png",alt:"image-20221212130543326"}})]),t._v(" "),e("h3",{attrs:{id:"git-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" git log")]),t._v(" "),e("p",[e("code",[t._v("git log")]),t._v("  用于查看日志")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20221212130800403.png",alt:"image-20221212130800403"}})]),t._v(" "),e("blockquote",[e("p",[t._v("在输入字母"),e("code",[t._v("Q")]),t._v("或"),e("code",[t._v("q")]),t._v("后即可退出日志")])]),t._v(" "),e("h2",{attrs:{id:"git远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git远程仓库"}},[t._v("#")]),t._v(" git远程仓库")]),t._v(" "),e("ul",[e("li",[t._v("git remote  查看远程仓库")]),t._v(" "),e("li",[t._v("git remote add 添加远程仓库")]),t._v(" "),e("li",[t._v("git clone 从远程仓库克隆")]),t._v(" "),e("li",[t._v("git pull 从远程仓库拉取")]),t._v(" "),e("li",[t._v("git push 推送到远程仓库")])]),t._v(" "),e("h3",{attrs:{id:"git-remote"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-remote"}},[t._v("#")]),t._v(" git remote")]),t._v(" "),e("p",[e("code",[t._v("git remote")]),t._v(" 可以用来查看远程仓库")]),t._v(" "),e("p",[t._v("如果要查看已经配置的远程仓库服务器，可以执行 git remote 命令，它会列出每一个远程服务器的简称。")]),t._v(" "),e("p",[t._v("如果已经克隆了远程仓库，那么至少应该能看到 origin ，这是 Git 克隆的仓库服务器的默认名字。")]),t._v(" "),e("blockquote",[e("p",[t._v("可以通过-v参数查看远程仓库更加详细的信息")]),t._v(" "),e("p",[t._v("本地仓库配置的远程仓库都需要一个简称，后续在和远程仓库交互时会使用到这个简称")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20221212132858086.png",alt:"image-20221212132858086"}})]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"git-remote-add"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-remote-add"}},[t._v("#")]),t._v(" git remote add")]),t._v(" "),e("p",[e("code",[t._v("git remote add")]),t._v(" 添加远程仓库")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git remote add 远程仓库地址\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("如果出现报错可以查看"),e("em",[t._v("git报错日志")]),t._v("文章那里的解释")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("下面的命令都是比较常见的，部分上面已经演示过了，就不再演示了。")]),t._v(" "),e("h2",{attrs:{id:"分支操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支操作"}},[t._v("#")]),t._v(" 分支操作")]),t._v(" "),e("p",[t._v("分支是Git 使用过程中非常重要的概念。使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。")]),t._v(" "),e("p",[t._v("本地仓库和远程仓库中都有分支，同一个仓库可以有多个分支，各个分支相互独立，互不干扰。")]),t._v(" "),e("p",[t._v("通过git init 命令创建本地仓库时默认会创建一个master分支。")]),t._v(" "),e("ul",[e("li",[t._v("git branch                                     查看分支")]),t._v(" "),e("li",[t._v("git branch [name]                       创建分支")]),t._v(" "),e("li",[t._v("git checkout [name]                    切换分支")]),t._v(" "),e("li",[t._v("git push [shortName] [name]   推送至远程仓库分支")]),t._v(" "),e("li",[t._v("git merge [name]                        合并分支")])]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"查看分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看分支"}},[t._v("#")]),t._v(" 查看分支")]),t._v(" "),e("p",[e("code",[t._v("git branch")]),t._v("\t\t列出所有本地分支")]),t._v(" "),e("p",[e("code",[t._v("git branch -r")]),t._v(" \t列出所有远程分支")]),t._v(" "),e("p",[e("code",[t._v("git branch -a")]),t._v(" \t列出所有本地分支和远程分支")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"切换分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[t._v("#")]),t._v(" 切换分支")]),t._v(" "),e("p",[t._v("一个仓库中可以有多个分支，切换分支命令格式：")]),t._v(" "),e("p",[e("code",[t._v("git checkout 分支名称")]),t._v("\t切换到指定分支")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"推送至远程仓库分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送至远程仓库分支"}},[t._v("#")]),t._v(" 推送至远程仓库分支")]),t._v(" "),e("p",[t._v("推送至远程仓库分支命令格式：")]),t._v(" "),e("p",[e("code",[t._v("git push 远程仓库简称 分支名称")]),t._v("\t推送至远程仓库指定分支")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"合并分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[t._v("#")]),t._v(" 合并分支")]),t._v(" "),e("p",[t._v("合并分支就是将两个分支的文件进行合并处理，命令格式：")]),t._v(" "),e("p",[e("code",[t._v("git merge 分支名称")]),t._v("\t将指定分支和当前分支合并")]),t._v(" "),e("blockquote",[e("p",[t._v("注意：分支合并时需注意合并的方向，在"),e("code",[t._v("master")]),t._v("分支执行操作，结果就是将当前分支合并到"),e("code",[t._v("master")]),t._v("分支。")])]),t._v(" "),e("h2",{attrs:{id:"标签操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标签操作"}},[t._v("#")]),t._v(" 标签操作")]),t._v(" "),e("p",[t._v("Git 中的标签，指的是某个分支某个特定时间点的状态。通过标签，可以很方便的切换到标记时的状态。")]),t._v(" "),e("p",[t._v("比较有代表性的是人们会使用这个功能来标记发布结点（v1.0 、v1.2等）。")]),t._v(" "),e("ul",[e("li",[t._v("git tag                                                查看标签")]),t._v(" "),e("li",[t._v("git tag [name]                                  创建标签")]),t._v(" "),e("li",[t._v("git push [shortName] [name]       将标签推送至远程仓库")]),t._v(" "),e("li",[t._v("git checkout -b [branch] [name]   检查标签")])])])}),[],!1,null,null,null);e.default=_.exports}}]);