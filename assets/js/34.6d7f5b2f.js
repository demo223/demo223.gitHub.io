(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{313:function(t,e,s){"use strict";s.r(e);var r=s(14),a=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git的版本控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git的版本控制"}},[t._v("#")]),t._v(" git的版本控制")]),t._v(" "),e("h2",{attrs:{id:"一、添加文件到版本控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、添加文件到版本控制"}},[t._v("#")]),t._v(" 一、添加文件到版本控制")]),t._v(" "),e("h3",{attrs:{id:"_1-1-添加文件git版本控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-添加文件git版本控制"}},[t._v("#")]),t._v(" 1.1 添加文件git版本控制")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231027230132015.png",alt:"image-20231027230132015"}})]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("绿色")]),t._v("——已经加入控制暂未提交；")]),t._v(" "),e("li",[e("strong",[t._v("红色")]),t._v("——未加入版本控制；")]),t._v(" "),e("li",[e("strong",[t._v("蓝色")]),t._v("——加入，已提交，有改动；")]),t._v(" "),e("li",[e("strong",[t._v("白色")]),t._v("——加入，已提交，无改动；")]),t._v(" "),e("li",[e("strong",[t._v("灰色")]),t._v("——版本控制已忽略文件；")]),t._v(" "),e("li",[e("strong",[t._v("黄色")]),t._v("——被git忽略，不跟踪。")])]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("一般创建文件的时候会弹出提示框是否将改文件加入git")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231027230753156.png",alt:"image-20231027230753156"}})]),t._v(" "),e("p",[t._v("如果取消了或是外部添加进来的文件也可以手动添加到git")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231027230925672.png",alt:"image-20231027230925672"}})]),t._v(" "),e("p",[t._v("或者也可以在idea中点击代码提交的按钮(✅)，提交的时候勾选上")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231027231041767.png",alt:"image-20231027231041767"}})]),t._v(" "),e("h3",{attrs:{id:"_1-2-取消文件git版本控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-取消文件git版本控制"}},[t._v("#")]),t._v(" 1.2 取消文件git版本控制")]),t._v(" "),e("p",[t._v("分为2种情况：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("文件还没有"),e("code",[t._v("commit")]),t._v("，创建后还未提交")])]),t._v(" "),e("li",[e("p",[t._v("文件已经"),e("code",[t._v("commit")]),t._v("过了，也就是说仓库里面这个文件也是加入了版本控制的")])])]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("对于第一种情况演示如下")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028112905240.png",alt:"image-20231028112905240"}})]),t._v(" "),e("p",[t._v("可以看到文件为绿色，"),e("strong",[t._v("绿色")]),t._v("——已经加入控制暂未提交。")]),t._v(" "),e("p",[t._v("我们可以直接\t右键该文件\t->\tGit\t->\t回滚")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028113212904.png",alt:"image-20231028113212904"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028113941776.png",alt:"image-20231028113941776"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028124541943.png",alt:"image-20231028124541943"}})]),t._v(" "),e("blockquote",[e("p",[t._v('关于"'),e("strong",[t._v("回滚窗口")]),t._v('"窗口下面的 “'),e("strong",[t._v("删除添加的文件的本地副本")]),t._v("”选项，如果你不再需要这个文件也可以勾选上。")])]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("对于第2种情况，文件已经"),e("code",[t._v("commit")]),t._v("过了")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028125245962.png",alt:"image-20231028125245962"}})]),t._v(" "),e("p",[t._v("可以看到文件为蓝色，"),e("strong",[t._v("蓝色")]),t._v("——加入，已提交，有改动。")]),t._v(" "),e("p",[t._v("方法1：直接删掉该文件，然后提交更改改文件就会从仓库的版本中移除。")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("方法2：如果只是想移除文件git版本控制，可以使用下面的命令\t"),e("code",[t._v("git rm -r --cached 文件名称")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028131030645.png",alt:"image-20231028131030645"}})]),t._v(" "),e("p",[t._v("在终端执行该命令后，可以看到文件颜色变成了红色，"),e("strong",[t._v("红色")]),t._v("——未加入版本控制。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028131205032.png",alt:"image-20231028131205032"}})]),t._v(" "),e("p",[t._v("此时这里提交并推送到仓库")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028131347547.png",alt:"image-20231028131347547"}})]),t._v(" "),e("p",[t._v("此时我们去查看仓库的文件，会发现文件已被移除")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028131541920.png",alt:"image-20231028131541920"}})]),t._v(" "),e("h2",{attrs:{id:"二、文件提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、文件提交"}},[t._v("#")]),t._v(" 二、文件提交")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231027231258640.png",alt:"image-20231027231258640"}})]),t._v(" "),e("p",[t._v("我们再点击提交按钮后，文件将会提交到暂存区，此时只是将文件提交到了暂存区也就是"),e("code",[t._v("commit")]),t._v("了，并没有"),e("code",[t._v("push")]),t._v("到仓库。")]),t._v(" "),e("p",[t._v("查看git历史")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231027231718283.png",alt:"image-20231027231718283"}})]),t._v(" "),e("h3",{attrs:{id:"_2-1-撤销提交和还原提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-撤销提交和还原提交"}},[t._v("#")]),t._v(" 2.1 撤销提交和还原提交")]),t._v(" "),e("hr"),t._v(" "),e("p",[e("strong",[t._v("还原提交")]),t._v("（Revert Commit）是指对某个已经提交的修改进行回滚，但是不会影响到之前的提交记录。这个操作通常用于撤销某个特定的提交，但是需要保留该提交的历史记录。还原提交同样会创建一个新的提交，这个提交包含了之前提交的所有修改的相反操作。")]),t._v(" "),e("p",[t._v("下面的操作是")]),t._v(" "),e("ol",[e("li",[t._v("第二次提交代码(没有push)")]),t._v(" "),e("li",[t._v("还原提交(第二次提交代码) [没有push]")]),t._v(" "),e("li",[t._v("还原提交 还原提交(第二次提交代码) [相当于恢复到了第二次提交代码的历史)")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028104235865.png",alt:"image-20231028104235865"}})]),t._v(" "),e("hr"),t._v(" "),e("p",[e("strong",[t._v("撤销提交")]),t._v("（Undo Commit）是指将最近一次提交的修改内容撤销掉，并将代码库回退到上一个提交的状态。这个操作通常用于撤销错误的提交或者回滚某些不需要保留的修改。撤销提交会创建一个新的提交，这个提交包含了之前提交的所有修改的相反操作。")]),t._v(" "),e("p",[t._v("例如，下面的例子，有2个文件发生了修改，我再点击了提交后，发现提交了不该提交的文件")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028105915371.png",alt:"image-20231028105915371"}})]),t._v(" "),e("p",[t._v("选择错误的提交，右键点击，选择撤销提交(undo commit)")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028110439851.png",alt:"image-20231028110439851"}})]),t._v(" "),e("p",[t._v("点击确定，执行撤销提交(undo commit)之后")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028111248292.png",alt:"image-20231028111248292"}})]),t._v(" "),e("p",[t._v("可以看到 代码已经恢复到了之前未提交的时候，b并且“第三次提交代码”的git历史记录被删除了。")]),t._v(" "),e("hr"),t._v(" "),e("blockquote",[e("p",[t._v("总的来说，撤销提交和还原提交都是用于回退代码库中的修改，但是它们的主要区别在于对提交历史记录的影响。撤销提交在"),e("code",[t._v("commit")]),t._v("的时候会创建一个新的提交，覆盖之前的提交记录，而还原提交则会保留之前的提交记录，同时创建一个新的提交记录。")])]),t._v(" "),e("h2",{attrs:{id:"三、版本回退"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、版本回退"}},[t._v("#")]),t._v(" 三、版本回退")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028135706103.png",alt:"image-20231028135706103"}})]),t._v(" "),e("p",[t._v("这里我们以回滚到第一次提交为例")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028140259702.png",alt:"image-20231028140259702"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028140945765.png",alt:"image-20231028140945765"}})]),t._v(" "),e("h3",{attrs:{id:"_3-1-软重置-soft-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-软重置-soft-reset"}},[t._v("#")]),t._v(" 3.1 "),e("strong",[t._v("软重置")]),t._v("（Soft Reset）")]),t._v(" "),e("p",[t._v("在选择"),e("strong",[t._v("软重置")]),t._v("（Soft Reset）后，相对选择的提交历史修改的地方都会保留下来"),e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028141256148.png",alt:"image-20231028141256148"}})]),t._v(" "),e("hr"),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028143543974.png",alt:"image-20231028143543974"}}),t._v("这个是在上面的基础上修改了第一次提交的内容后进行软重置后的提交")]),t._v(" "),e("p",[t._v("此时提交代码会出现代码冲突，冲突如下")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028144017682.png",alt:"image-20231028144017682"}})]),t._v(" "),e("p",[t._v("再选择\t"),e("strong",[t._v("接受您的变更")]),t._v("\t后推送代码到远程仓库。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028144530296.png",alt:"image-20231028144530296"}})]),t._v(" "),e("h3",{attrs:{id:"_3-2-混合重置-mixed-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-混合重置-mixed-reset"}},[t._v("#")]),t._v(" 3.2 "),e("strong",[t._v("混合重置")]),t._v("（Mixed Reset）")]),t._v(" "),e("p",[t._v("这里我进行了第四次提交代码和第五次提交代码，下面演示回滚到第四次提交代码")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028145334374.png",alt:"image-20231028145334374"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028145450575.png",alt:"image-20231028145450575"}})]),t._v(" "),e("p",[t._v("在选择"),e("strong",[t._v("混合重置")]),t._v("（Mixed Reset）后，可以看到实际的效果与软重置基本上是一样的")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028145550256.png",alt:"image-20231028145550256"}})]),t._v(" "),e("p",[t._v("但是对于提交的时候会发现是有区别的")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20231028150551149.png",alt:"image-20231028150551149"}})]),t._v(" "),e("p",[t._v("在提交并推送代码的时候会发现代码并没有出现代码冲突，直接合并分支（merge）即可。")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("关于软重置和混合重置区别：")])]),t._v(" "),e("p",[t._v("软重置（Soft Reset）和混合重置（Mixed Reset）是 Git 中的两种不同类型的重置操作，它们之间的区别在于对"),e("strong",[t._v("暂存区")]),t._v("的处理方式。")]),t._v(" "),e("p",[t._v("软重置（Soft Reset）会将 HEAD 指针移动到指定的提交，并且保留最新提交的更改在暂存区中。这意味着软重置不会修改暂存区和工作目录中的文件内容，只是撤销了最新提交并将其更改移回到暂存区。这样可以方便地重新提交或者修改之前的提交。")]),t._v(" "),e("p",[t._v("混合重置（Mixed Reset）也会将 HEAD 指针移动到指定的提交，但是与软重置不同的是，它会将最新提交的更改移回到工作目录中，而不是暂存区。这意味着混合重置会修改工作目录中的文件内容，但不会影响暂存区。通过混合重置，你可以撤销最新的提交并丢弃其更改，然后根据需要重新提交或修改文件。")]),t._v(" "),e("p",[t._v("总结起来，**软重置保留了最新提交的更改在暂存区，而混合重置将最新提交的更改移回到工作目录。**因此，**软重置适用于需要重新提交或修改之前的提交的情况，而混合重置适用于需要撤销最新提交并丢弃其更改的情况。**可以根据你的需求选择适合的重置方式。")]),t._v(" "),e("p",[e("strong",[t._v("个人总结：")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("如果需要对回退的版本中的文件进行修改选择软重置；")])]),t._v(" "),e("li",[e("p",[t._v("如果不需要修改回退的版本的文件进行修改选择混合重置；")])])])]),t._v(" "),e("h3",{attrs:{id:"_3-3-硬重置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-硬重置"}},[t._v("#")]),t._v(" 3.3 硬重置")]),t._v(" "),e("p",[t._v("对于"),e("strong",[t._v("硬重置")]),t._v("（Hard Reset），就是直接将文件还原到当前指定的git提交历史，将本地修改的变更全都丢弃。")]),t._v(" "),e("blockquote",[e("p",[t._v("请注意，执行硬重置操作将永久删除提交历史和更改，无法恢复。慎用!")])]),t._v(" "),e("h3",{attrs:{id:"_3-4-保留重置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-保留重置"}},[t._v("#")]),t._v(" 3.4 保留重置")]),t._v(" "),e("p",[t._v("与硬重置的效果类似，但是会保存本地更改而不是丢弃。")])])}),[],!1,null,null,null);e.default=a.exports}}]);