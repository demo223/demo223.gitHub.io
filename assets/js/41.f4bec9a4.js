(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{322:function(v,_,l){"use strict";l.r(_);var t=l(14),n=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("blockquote",[_("p",[v._v("说说你了解的JVM内存模型？")])]),v._v(" "),_("p",[v._v("得分点")]),v._v(" "),_("ul",[_("li",[v._v("类加载子系统")]),v._v(" "),_("li",[v._v("执行引擎")]),v._v(" "),_("li",[v._v("运行时数据区")])]),v._v(" "),_("p",[v._v("标准回答：")]),v._v(" "),_("p",[v._v("JVM由三部分组成：类加载子系统、执行引擎、运行时数据区。")]),v._v(" "),_("ol",[_("li",[v._v("类加载子系统，可以根据指定的全限定名来载入类或接口。")]),v._v(" "),_("li",[v._v("执行引擎，负责执行那些包含在被载入类的方法中的指令。")]),v._v(" "),_("li",[v._v("运行时数据区，当程序运行时，JVM需要内存来存储许多内容，例如：字节码、对象、参数、返回值、局部变量、运算的中间结果，等等，JVM会把这些东西都存储到运行时数据区中，以便于管理。而运行时数据区又可以分为方法区、堆、虚拟机栈、本地方法栈、程序计数器。")])]),v._v(" "),_("p",[v._v("加分回答")]),v._v(" "),_("p",[v._v("运行时数据区是开发者重点要关注的部分，因为程序的运行与它密不可分，很多错误的排查也需要基于对运行时数据区的理解。在运行时数据区所包含的几块内存空间中，方法区和堆是线程之间共享的内存区域，而虚拟机栈、本地方法栈、程序计数器则是线程私有的区域，就是说每个线程都有自己的这个区域。")])])}),[],!1,null,null,null);_.default=n.exports}}]);