(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{330:function(v,_,e){"use strict";e.r(_);var t=e(14),o=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("blockquote",[_("p",[v._v("请说说你对Java集合的了解")])]),v._v(" "),_("p",[v._v("得分点 Set、List、Quque、Map")]),v._v(" "),_("p",[v._v("加分点  集合的线程安全问题")]),v._v(" "),_("p",[v._v("标准回答：")]),v._v(" "),_("p",[v._v("Java中的集合类分为4大类，分别由4个接口来代表，它们是"),_("code",[v._v("Set")]),v._v("、"),_("code",[v._v("List")]),v._v("、"),_("code",[v._v("Queue")]),v._v("、"),_("code",[v._v("Map")]),v._v("。其中，"),_("code",[v._v("Set")]),v._v("、"),_("code",[v._v("List")]),v._v("、"),_("code",[v._v("Queue")]),v._v("、都继承自"),_("code",[v._v("Collection")]),v._v("接口。")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("Set代表无序的、元素不可重复的集合。")])]),v._v(" "),_("li",[_("p",[v._v("List代表有序的、元素可以重复的集合。")])]),v._v(" "),_("li",[_("p",[v._v("Queue代表先进先出（FIFO）的队列。")])]),v._v(" "),_("li",[_("p",[v._v("Map代表具有映射关系（key-value）的集合。")])])]),v._v(" "),_("p",[v._v("Java提供了众多集合的实现类，它们都是这些接口的直接或间接的实现类，其中比较常用的有：HashSet、TreeSet、ArrayList、LinkedList、ArrayDeque、HashMap、TreeMap等。")]),v._v(" "),_("p",[v._v("加分回答：")]),v._v(" "),_("p",[v._v("上面所说的集合类的接口或实现，都位于"),_("code",[v._v("java.util")]),v._v("包下，这些实现大多数都是"),_("strong",[v._v("非线程安全")]),v._v("的。虽然非线程安全，但是这些类的性能较好。如果需要使用线程安全的集合类，则可以利用"),_("code",[v._v("Collections")]),v._v("工具类，该工具类提供的"),_("code",[v._v("synchronizedXxx()")]),v._v("方法，可以将这些集合类包装成线程安全的集合类。 "),_("code",[v._v("java.util")]),v._v("包下的集合类中，也有少数的线程安全的集合类，例如"),_("code",[v._v("Vector")]),v._v("、"),_("code",[v._v("Hashtable")]),v._v("，它们都是非常古老的API。虽然它们是线程安全的，但是性能很差，已经不推荐使用了。")]),v._v(" "),_("p",[v._v("从 "),_("code",[v._v("JDK 1.5")]),v._v("开始，并发包("),_("code",[v._v("java.util.concurrent")]),v._v(")下新增了大量高效的并发的容器，这些容器按照实现机制可以分为三类。")]),v._v(" "),_("ul",[_("li",[v._v("第一类是以降低锁粒度来提高并发性能的容器,它们的类名以"),_("code",[v._v("ConcurrentXXX")]),v._v("开头，如ConcurrentHashMap。")]),v._v(" "),_("li",[v._v("第二类是采用写时复制技术实现的并发容器,它们的类名以"),_("code",[v._v("CopyOnWriteXXX")]),v._v("开头，如CopyOnWriteArrayList。")]),v._v(" "),_("li",[v._v("第三类是采用Lock实现的阻塞队列，内部创建两个Condition分别用于生产者和消费者的等待，这些类都实现了BlockingQueue接口，如ArrayBlockingQueue。")])]),v._v(" "),_("p",[v._v("​")]),v._v(" "),_("hr"),v._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/20190414120718393.PNG",alt:"在这里插入图片描述"}})]),v._v(" "),_("hr")])}),[],!1,null,null,null);_.default=o.exports}}]);