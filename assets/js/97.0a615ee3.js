(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{378:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"课程引入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#课程引入"}},[t._v("#")]),t._v(" 课程引入")]),t._v(" "),s("h3",{attrs:{id:"问题演示1-分层耦合问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题演示1-分层耦合问题"}},[t._v("#")]),t._v(" 问题演示1-分层耦合问题")]),t._v(" "),s("p",[t._v("某业务接口")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("其中一种实现 A")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceImplA")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UserServiceImplA.foo()..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("业务功能使用者调用业务层方法")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" userService "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceImplA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用业务方法")]),t._v("\n        userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("测试")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserController")]),t._v(" controller "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserController")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncontroller"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("如果业务功能发生了调整，变成了实现 B")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceImplB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UserServiceImplB.foo()..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("可以看到，业务功能的使用者（UserController）也会受到影响，使用实现 A 的地方都需要修改：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里要修改为实现 B")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" userService "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceImplB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("之前老师应该都这么讲：为了降低耦合，需要在分层调用时去使用接口，不要直接使用实现类。但看看下面例子，你会发现，Controller 使用 Service 的实现类是无法避免的！上面的问题在于 Controller 与 Service 产生了耦合：即一方的改变影响了另一方。能否达到如下的效果，Service 发生变更，但 Controller 不受影响？")]),t._v(" "),s("p",[s("strong",[t._v("答案：可以达到，使用Spring来解决。")])]),t._v(" "),s("p",[t._v("① 交出对象的控制权：把 Service 实现的控制权交给 Spring 容器")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Spring扫描到@Service注解之后，会创建UserServiceImplA对象，保存到Spring容器中。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceImplA")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UserServiceImplA.foo()..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("② 建立对象的依赖关系：把 Controller 交给 Spring 容器，并接受容器提供的 Service 对象")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Contrller")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowried")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Spring会从自身容器中找到UserService类型的对象赋值给该变量")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此处就没有new实现类对象。")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("blockquote",[s("p",[s("em",[s("strong",[t._v("名词解释：容器")])])]),t._v(" "),s("ul",[s("li",[t._v("英文对应 Container，指对象的运行环境，同时负责管理这些对象的创建、初始化、销毁等")]),t._v(" "),s("li",[t._v("见过的容器有 Tomcat 容器，管理 Servlet，Filter 等对象")]),t._v(" "),s("li",[t._v("而 Spring 也是一种容器，管理 Controller，Service，Dao 等对象")])])]),t._v(" "),s("h3",{attrs:{id:"问题演示2-使用框架复杂"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题演示2-使用框架复杂"}},[t._v("#")]),t._v(" 问题演示2-使用框架复杂")]),t._v(" "),s("ul",[s("li",[t._v("没有使用Spring我们service层方法使用mybatis框架")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322105544258.png",alt:"image-20220322105544258"}}),t._v(" "),s("ul",[s("li",[t._v("使用Spring我们service层方法使用mybatis框架")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322105611548.png",alt:"image-20220322105611548"}}),t._v(" "),s("p",[t._v("我们发现，使用了Spring之后，我们使用mybatis也变简单了。")]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("Spring能解决我们开发中的哪两类问题？")]),t._v(" "),s("p",[t._v("1.1 代码分层耦合的问题")]),t._v(" "),s("p",[t._v("1.2 使用框架复杂的问题")]),t._v(" "),s("p",[t._v("=="),s("strong",[t._v("所以：我们必须学好Spring框架！！")]),t._v("==")]),t._v(" "),s("h2",{attrs:{id:"_1-spring和springboot简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-spring和springboot简介"}},[t._v("#")]),t._v(" 1 Spring和SpringBoot简介")]),t._v(" "),s("h3",{attrs:{id:"_1-1-spring简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-spring简介"}},[t._v("#")]),t._v(" 1.1 Spring简介")]),t._v(" "),s("h4",{attrs:{id:"_1-1-1-spring概念和作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-spring概念和作用"}},[t._v("#")]),t._v(" 1.1.1 Spring概念和作用")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Spring 是一款目前主流的 Java EE ==轻量级开源框架== ，是 Java 世界最为成功的框架之一。Spring 由“Spring 之父”Rod Johnson 提出并创立，其目的是用于简化 Java 企业级应用的开发难度和开发周期。")])]),t._v(" "),s("li",[s("p",[t._v("自 ==2004== 年 4 月，Spring 1.0 版本正式发布以来，"),s("strong",[t._v("Spring")]),t._v(" 已经步入到了第 5 个大版本，也就是我们常说的 Spring 5")])]),t._v(" "),s("li",[s("p",[t._v("lSpring基础的是 Spring Framework，其功能有：")]),t._v(" "),s("ul",[s("li",[t._v("==IoC –控制反转，Spring 两大核心技术之一==")]),t._v(" "),s("li",[t._v("==AOP – 面向切面编程，Spring 两大核心技术之一==")]),t._v(" "),s("li",[t._v("事务 - 无需编写代码，即可实现数据库事务管理")]),t._v(" "),s("li",[t._v("测试 - 与测试框架集成、web 单元测试")]),t._v(" "),s("li",[t._v("MVC - 开发 web 应用程序")]),t._v(" "),s("li",[t._v("缓存 - 对缓存进行抽象")]),t._v(" "),s("li",[t._v("调度 - 延时任务、定时任务")])])]),t._v(" "),s("li",[s("p",[t._v("Spring Framework 在开发中的作用：")]),t._v(" "),s("ul",[s("li",[t._v("==分层解耦 - 让单体应用的可扩展性更强==")]),t._v(" "),s("li",[t._v("==整合框架 - 整合第三方框架，使之协同工作==")]),t._v(" "),s("li",[t._v("实用技术 - 自身强大，提供各种实用功能")])])])]),t._v(" "),s("h4",{attrs:{id:"_1-1-2-spring体系架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-spring体系架构"}},[t._v("#")]),t._v(" 1.1.2 Spring体系架构")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322105944705.png",alt:"image-20220322105944705"}})]),t._v(" "),s("h4",{attrs:{id:"_1-1-3-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-总结"}},[t._v("#")]),t._v(" 1.1.3 总结")]),t._v(" "),s("p",[t._v("1、Spring的两大核心？")]),t._v(" "),s("p",[t._v("​\t==1.1、IOC：控制反转==")]),t._v(" "),s("p",[t._v("​\t==1.2、AOP：面向切面编程==")]),t._v(" "),s("p",[t._v("2、Spring在开发中的作用有哪些？")]),t._v(" "),s("p",[t._v("​\t==2.1、分层解耦 - 让单体应用的可扩展性更强==")]),t._v(" "),s("p",[t._v("​\t==2.2、整合框架 - 整合第三方框架，使之协同工作==")]),t._v(" "),s("p",[t._v("​\t2.3、实用技术 - 自身强大，提供各种实用功能")]),t._v(" "),s("h3",{attrs:{id:"_1-2-springboot简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-springboot简介"}},[t._v("#")]),t._v(" 1.2 SpringBoot简介")]),t._v(" "),s("h4",{attrs:{id:"_1-2-1-springboot介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-springboot介绍"}},[t._v("#")]),t._v(" 1.2.1 SpringBoot介绍")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Spring Boot 是 Pivotal 团队在 Spring 的基础上提供的一套全新的开源框架，其目的是为了简化 Spring 应用的搭建和开发过程。==Spring Boot 去除了大量的 XML 配置文件，简化了复杂的依赖管理==。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Spring Boot 去除了大量的 XML 配置文件")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322110206143.png",alt:"image-20220322110206143"}})]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("简化了复杂的依赖管")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322110328164.png",alt:"image-20220322110328164"}})])])]),t._v(" "),s("p",[t._v("发现：使用了SpringBoot开发项目确实简介了很多。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Spring Boot 具有 Spring 一切优秀特性，==Spring 能做的事，Spring Boot 都可以做，而且使用更加简单，功能更加丰富，性能更加稳定而健壮==。随着近些年来微服务技术的流行，Spring Boot 也成了时下炙手可热的技术。")])]),t._v(" "),s("li",[s("p",[t._v("==Spring Boot 集成了大量常用的第三方库配置，Spring Boot 应用中这些第三方库几乎可以是零配置的开箱即用（out-of-the-box）==，大部分的 Spring Boot 应用都只需要非常少量的配置代码（基于 Java 的配置），开发者能够更加专注于业务逻辑。")]),t._v(" "),s("ul",[s("li",[t._v("传统Spring项目配置繁多且复杂")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322110634587.png",alt:"image-20220322110634587"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322110648934.png",alt:"image-20220322110648934"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322110706721.png",alt:"image-20220322110706721"}})]),t._v(" "),s("ul",[s("li",[t._v("SpringBoot项目配置极少且简单")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322110729986.png",alt:"image-20220322110729986"}})])])]),t._v(" "),s("h4",{attrs:{id:"_1-2-2-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-总结"}},[t._v("#")]),t._v(" 1.2.2 总结")]),t._v(" "),s("p",[t._v("1.Spring Boot去除了大量的Spring的XML 配置文件，简化了复杂的依赖管理")]),t._v(" "),s("p",[t._v("2.Spring 能做的事，Spring Boot 都可以做，而且使用更加简单，功能更加丰富。")]),t._v(" "),s("p",[t._v("==说明：使用Spring Boot去学习Spring，利用SpringBoot配置简单的优越性，让大家学习Spring更容易，来更轻松。==")]),t._v(" "),s("h2",{attrs:{id:"_2-springboot的快速入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-springboot的快速入门"}},[t._v("#")]),t._v(" 2 SpringBoot的快速入门")]),t._v(" "),s("h3",{attrs:{id:"【第一步】创建springboot的项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【第一步】创建springboot的项目"}},[t._v("#")]),t._v(" 【第一步】创建SpringBoot的项目")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322111516304.png",alt:"image-20220322111516304"}})]),t._v(" "),s("h3",{attrs:{id:"【第二步】创建userservice接口和userserviceimpla实现类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【第二步】创建userservice接口和userserviceimpla实现类"}},[t._v("#")]),t._v(" 【第二步】创建UserService接口和UserServiceImplA实现类")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceImplA")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UserServiceImplA.foo()..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"【第三步】在引导类中获取userservice实现类对象-并调用方法。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【第三步】在引导类中获取userservice实现类对象-并调用方法。"}},[t._v("#")]),t._v(" 【第三步】在引导类中获取UserService实现类对象，并调用方法。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表示该类是SpringBoot程序入口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spring01Application")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1 返回值为Spring容器对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableApplicationContext")]),t._v(" ac "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spring01Application")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2 从Spring容器中获取UserService实现类对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" userService "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ac"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3 调用UserService的foo方法")]),t._v("\n        userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h2",{attrs:{id:"_3-控制反转-ioc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-控制反转-ioc"}},[t._v("#")]),t._v(" 3 控制反转(IoC)")]),t._v(" "),s("h3",{attrs:{id:"_3-1-ioc概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-ioc概念"}},[t._v("#")]),t._v(" 3.1 IoC概念")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("控制反转：（Inversion of Control，缩写为IoC）把=="),s("strong",[t._v("创建对象")]),t._v("==的权利交给=="),s("strong",[t._v("Spring")]),t._v("==容器。")])]),t._v(" "),s("li",[s("p",[t._v("之前对象如何来的？")]),t._v(" "),s("p",[t._v("==new出来的==")])]),t._v(" "),s("li",[s("p",[t._v("之前对象属性如何赋值？")]),t._v(" "),s("p",[t._v("==调用构造方法、调用set方法完成赋值==")])]),t._v(" "),s("li",[s("p",[t._v("如果使用了Spring之后，对象那里来？")])])]),t._v(" "),s("p",[t._v("​\t ==由Spring创建并保存到Spring容器中，我们从Spring容器中获取对象==")]),t._v(" "),s("ul",[s("li",[t._v("如果使用了Spring之后，对象属性的赋值？")])]),t._v(" "),s("p",[t._v("​\t ==由Spring给对象的属性赋值==")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322112221373.png",alt:"image-20220322112221373"}})]),t._v(" "),s("ul",[s("li",[t._v("总结：使用了Spring之后，对象由Spring创建和管理，我们从Spring容器中获取需要的Bean对象就行了。")])]),t._v(" "),s("h3",{attrs:{id:"_3-2-扫描bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-扫描bean"}},[t._v("#")]),t._v(" 3.2 扫描Bean")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("要把某些=="),s("strong",[t._v("类的对象")]),t._v("==交给 Spring 管理，需要在类上标注如下注解之一")]),t._v(" "),s("p",[t._v("@Component –把=="),s("strong",[t._v("普通类")]),t._v("==交给 Spring管理，这个类不属于三层架构中的类")]),t._v(" "),s("p",[t._v("@Controller - 把=="),s("strong",[t._v("控制器类")]),t._v("==交给 Spring管理(学习SpringMVC会用到)")]),t._v(" "),s("p",[t._v("@Service - 把=="),s("strong",[t._v("业务层类")]),t._v("==交给 Spring管理")]),t._v(" "),s("p",[t._v("@Repository - 把=="),s("strong",[t._v("数据访问层类")]),t._v("==交给Spring管理（用得少，因为与 MyBatis 整合）")])])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceImplA")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UserServiceImplA.foo()..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("注意：Spring默认是加载==引导类/启动类所在包及其子包中所有带有以上注解的类==，创建这些类的对象，保存到Spring容器中。")]),t._v(" "),s("p",[t._v("思考：如果Bean不在引导类/启动类所在包及其子包中，那Bean是否被加载到？")]),t._v(" "),s("p",[t._v("答案：不能，需要在引导类上使用@ComponentScan(“要扫描的包”)注解指定要加载哪个包中的Bean。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322112548588.png",alt:"image-20220322112548588"}})]),t._v(" "),s("h3",{attrs:{id:"_3-3-获取bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-获取bean"}},[t._v("#")]),t._v(" 3.3 获取Bean")]),t._v(" "),s("h4",{attrs:{id:"_3-3-1-方法介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-方法介绍"}},[t._v("#")]),t._v(" 3.3.1 方法介绍")]),t._v(" "),s("p",[t._v("Spring容器启动时，会把其中的bean都创建好，如果想要主动获取这些 bean，可以使用容器的如下方法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("根据类型获取 bean - =="),s("T",[t._v(" T  getBean(Class"),s("T",[t._v("  requiredType)==，返回值是方法参数传入的类型")])],1)],1),t._v(" "),s("ul",[s("li",[t._v("可以传递父类型，返回子类型")]),t._v(" "),s("li",[t._v("可以传递接口类型，返回实现类型")])])]),t._v(" "),s("li",[s("p",[t._v("根据 id 获取 bean - ==Object getBean(String name)==，返回值是Object类型，后期自己需要强转")])]),t._v(" "),s("li",[s("p",[t._v("根据 id 获取 bean -  =="),s("T",[t._v(" T   getBean (String name, Class"),s("T",[t._v(" requiredType)==，返回值是方法参数传入的类型")])],1)],1)])]),t._v(" "),s("h4",{attrs:{id:"_3-3-2-spring容器介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-spring容器介绍"}},[t._v("#")]),t._v(" 3.3.2 Spring容器介绍")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322112902039.png",alt:"image-20220322112902039"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322112914752.png",alt:"image-20220322112914752"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322112919438.png",alt:"image-20220322112919438"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322112923615.png",alt:"image-20220322112923615"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322112938282.png",alt:"image-20220322112938282"}})]),t._v(" "),s("h3",{attrs:{id:"_3-4-bean的范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-bean的范围"}},[t._v("#")]),t._v(" 3.4 Bean的范围")]),t._v(" "),s("p",[t._v("在类上使用@scope注解定义Bean的作用域，Spring支持五种作用域，后三种在 web 环境才生效。")]),t._v(" "),s("ul",[s("li",[t._v("==singleton - 容器内同 id 的 bean 只有一个实例（默认）==")]),t._v(" "),s("li",[t._v("==prototype - 每次使用该 bean 时会创建新的实例==")]),t._v(" "),s("li",[t._v("request - 在 web 环境中，每个请求范围内会创建新的实例")]),t._v(" "),s("li",[t._v("session - 在 web 环境中，每个会话范围内会创建新的实例")]),t._v(" "),s("li",[t._v("application- 在 web 环境中，每个应用范围内会创建新的实例")])]),t._v(" "),s("p",[s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322114039571.png",alt:"image-20220322114039571"}}),t._v("、")]),t._v(" "),s("h3",{attrs:{id:"_3-5-bean的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-bean的生命周期"}},[t._v("#")]),t._v(" 3.5 Bean的生命周期")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("标注了 =="),s("strong",[t._v("@PostConstruct")]),t._v("== 的方法是初始化方法，会=="),s("strong",[t._v("在bean被创建之后")]),t._v("==调用。")])]),t._v(" "),s("li",[s("p",[t._v("标注了 "),s("strong",[t._v("@PreDestroy")]),t._v(" 的方法是销毁方法，"),s("strong",[t._v("==singleton范围的bean=="),s("strong",[t._v("的销毁方法会")]),t._v("==在容器关闭前被调用==")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("延迟初始化")]),t._v(" "),s("p",[t._v("​\t默认情况下 singleton范围的的 bean 是容器创建时就会=="),s("strong",[t._v("创建")]),t._v("==")]),t._v(" "),s("p",[t._v("​\t如果希望=="),s("strong",[t._v("用到时才创建")]),t._v("==，可以使用 =="),s("strong",[t._v("@Lazy")]),t._v("== 注解标注在类上来延迟创建")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322114339934.png",alt:"image-20220322114339934"}})]),t._v(" "),s("h3",{attrs:{id:"_3-6-管理第三方bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-管理第三方bean"}},[t._v("#")]),t._v(" 3.6 管理第三方Bean")]),t._v(" "),s("p",[t._v("如果要管理的对象来自于第三方，这时是=="),s("strong",[t._v("无法用@Component")]),t._v("==等注解来实现的，解决方法：使用@Configuration注解定义配置类，在配置类中定义方法使用=="),s("strong",[t._v("@Bean")]),t._v("==注解将返回返回的对象保存到Spring容器中。")]),t._v(" "),s("h4",{attrs:{id:"_3-6-1-编写配置类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-1-编写配置类"}},[t._v("#")]),t._v(" 3.6.1 编写配置类")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322115009412.png",alt:"image-20220322115009412"}})]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表示该类是一个配置类，有SpringBoot自动扫描加载")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSourceConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//默认添加到spring容器中Bean的名称就是方法名(首字母小写)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DruidDataSource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1 创建连接池对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DruidDataSource")]),t._v(" dataSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DruidDataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2 设置连接参数")]),t._v("\n        dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDriverClassName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.mysql.jdbc.Driver"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUrl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jdbc:mysql://localhost:3306/brand_demo?useSSL=false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUsername")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPassword")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3 返回连接池对象，保存到Spring容器中")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("@Configuration：写在类上，表示该类是一个配置类，有SpringBoot自动扫描加载")]),t._v(" "),s("p",[t._v("@Bean：写在方法上，表示将该方法的返回值添加到Spring容器中，默认添加到spring容器中Bean的名称就是方法名(首字母小写)。")]),t._v(" "),s("h4",{attrs:{id:"_3-6-2-在引导类中使用连接池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-2-在引导类中使用连接池"}},[t._v("#")]),t._v(" 3.6.2 在引导类中使用连接池")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表示该类是SpringBoot程序入口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spring01Application")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1 返回值为Spring容器对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableApplicationContext")]),t._v(" ac "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spring01Application")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2 从Spring容器中获取DataSource连接池对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" dataSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ac"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3 调用DataSource的getConnection()获取连接的方法")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" conn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConnection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conn = "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("conn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h2",{attrs:{id:"_4-依赖注入-di"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-依赖注入-di"}},[t._v("#")]),t._v(" 4 依赖注入(DI)")]),t._v(" "),s("p",[t._v("依赖注入：Dependency Injection，缩写为DI。就是指被 Spring管理的Bean对象之间的依赖关系。由=="),s("strong",[t._v("Spring容器")]),t._v("==完成**==对象属性=="),s("strong",[t._v("的")]),t._v("==赋值==**。")]),t._v(" "),s("p",[t._v("依赖注入相关的注解有")]),t._v(" "),s("p",[t._v("1、给对象类型的属性赋值")]),t._v(" "),s("p",[t._v("​\t@Autowired")]),t._v(" "),s("p",[t._v("​\t@Qualifier")]),t._v(" "),s("p",[t._v("2、给普通类型的属性赋值")]),t._v(" "),s("p",[t._v("​\t@Value")]),t._v(" "),s("p",[t._v("​\t@ConfigurationProperties")]),t._v(" "),s("h3",{attrs:{id:"_4-1-给对象类型的属性赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-给对象类型的属性赋值"}},[t._v("#")]),t._v(" 4.1 给对象类型的属性赋值")]),t._v(" "),s("h4",{attrs:{id:"autowired注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#autowired注解"}},[t._v("#")]),t._v(" @Autowired注解")]),t._v(" "),s("p",[t._v("作用：给对象类型的属性赋值，可以用在成员变量、成员方法、构造方法上")]),t._v(" "),s("ul",[s("li",[t._v("加在成员变量上，会根据成员变量的"),s("strong",[t._v("类型")]),t._v("到容器中找类型匹配的bean进行注入(赋值)")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322120348355.png",alt:"image-20220322120348355"}}),t._v(" "),s("ul",[s("li",[t._v("加在普通方法上，会根据方法的参数"),s("strong",[t._v("类型")]),t._v("到容器中找类型匹配的bean进行注入(赋值)")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322120427423.png",alt:"image-20220322120427423"}}),t._v(" "),s("ul",[s("li",[t._v("加在构造方法上，会根据构造方法的参数"),s("strong",[t._v("类型")]),t._v("到容器中类型匹配的bean进行注入(赋值)，如果仅有唯一的有参构造，可以省略 @Autowired。")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322120500953.png",alt:"image-20220322120500953"}}),t._v(" "),s("h4",{attrs:{id:"qualifier注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qualifier注解"}},[t._v("#")]),t._v(" @Qualifier注解")]),t._v(" "),s("p",[t._v("问题：使用@Autowired给对象类型的属性赋值，如果同类型的对象有多个，赋值是否有问题？")]),t._v(" "),s("p",[t._v("自动注入规则：使用@Autowired给对象类型的属性赋值，如果同类型的对象有多个，就按照变量名和Bean的名称进行匹配，建议使用@Qualifier注解指定要匹配的Bean的名称。")]),t._v(" "),s("p",[t._v("==@Qualifier注解作用：指定要匹配的Bean的名称。==")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322120637883.png",alt:"image-20220322120637883"}})]),t._v(" "),s("h3",{attrs:{id:"_4-2-给普通类型的属性赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-给普通类型的属性赋值"}},[t._v("#")]),t._v(" 4.2 给普通类型的属性赋值")]),t._v(" "),s("h4",{attrs:{id:"value注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#value注解"}},[t._v("#")]),t._v(" @Value注解")]),t._v(" "),s("p",[t._v("作用：给普通类型(基本类型、包装类类型、Sring类型)的属性赋值。")]),t._v(" "),s("p",[t._v("应用场景：==变化的配置信息==写死在java代码中不好，建议放入配置文件，Spring Boot采用==application.properties== 作为配置文件，可以使用 ==@Value==注解结合EL表达式根据key读取配置文件中对应的value值。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220402173909528.png",alt:"image-20220402173909528"}})]),t._v(" "),s("h4",{attrs:{id:"configurationproperties注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configurationproperties注解"}},[t._v("#")]),t._v(" @ConfigurationProperties注解")]),t._v(" "),s("p",[t._v("@Value 只能一个个属性来进行，比较麻烦，可以用 @ConfigurationProperties注解来简化。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220402173918371.png",alt:"image-20220402173918371"}})]),t._v(" "),s("h2",{attrs:{id:"_5-拔高知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-拔高知识"}},[t._v("#")]),t._v(" 5 拔高知识")]),t._v(" "),s("h3",{attrs:{id:"_5-1-整合junit单元测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-整合junit单元测试"}},[t._v("#")]),t._v(" 5.1 整合Junit单元测试")]),t._v(" "),s("p",[t._v("1、其实我们创建的SpringBoot工程已经整合了Junit单元测试，并且使用的是Junit5的版本，好处是测试方法不需要使用public修饰。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322145837985.png",alt:"image-20220322145837985"}})]),t._v(" "),s("p",[t._v("2、测试类上的@SpringBootTest注解表示该类是一个SpringBoot单元测试类，在该测试类中可以直接使用@Autowired注解注入要使用对象")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20230214153010906.png",alt:"image-20230214153010906"}})]),t._v(" "),s("h3",{attrs:{id:"_5-2-lombok工具包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-lombok工具包"}},[t._v("#")]),t._v(" 5.2 lombok工具包")]),t._v(" "),s("ul",[s("li",[t._v("平时我们在定义JavaBean的时候经常需要使用idea给Bean生成构造方法、getter和setter方法、toString等方法。虽然不难，但是也挺累的。")]),t._v(" "),s("li",[t._v("使用了lombok工具包就能完美的解决这个问题")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--lombok--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.projectlombok"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("lombok"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220405165059249.png",alt:"image-20220405165059249"}}),t._v(" "),s("ul",[s("li",[t._v("@Data注解")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220405165145668.png",alt:"image-20220405165145668"}}),t._v(" "),s("ul",[s("li",[t._v("@Slf4j注解")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220405165213619.png",alt:"image-20220405165213619"}}),t._v(" "),s("p",[t._v("以后我们将经常在Bean上使用@Slf4j注解，然后使用log对象进行日志输出，代替System.out.println()输出。例如：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Slf4j")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BrandServiceImpl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BrandService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Slf4j")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spring01HomeworkApplicationTests")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"_5-3-循环依赖问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-循环依赖问题"}},[t._v("#")]),t._v(" 5.3 循环依赖问题")]),t._v(" "),s("h4",{attrs:{id:"_5-3-1-set方式循环依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-1-set方式循环依赖"}},[t._v("#")]),t._v(" 5.3.1 set方式循环依赖")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("bean的初始化过程")]),t._v(" "),s("p",[t._v("bean 从创建到初始化三个阶段，此顺序不能颠倒，并且只发生一次！")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322150647437.png",alt:"image-20220322150647437"}})]),t._v(" "),s("li",[s("p",[t._v("代码演示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20230214152841623.png",alt:"image-20230214152841623"}})]),t._v(" "),s("p",[t._v("单例 set 循环依赖=="),s("strong",[t._v("无需任何配置")]),t._v("==，Spring 会自动调整执行顺序，调整后的初始化顺序是：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322150730630.png",alt:"image-20220322150730630"}})])])]),t._v(" "),s("h4",{attrs:{id:"_5-3-2-构造方式循环依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-2-构造方式循环依赖"}},[t._v("#")]),t._v(" 5.3.2 构造方式循环依赖")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("代码演示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322150904398.png",alt:"image-20220322150904398"}})])]),t._v(" "),s("li",[s("p",[t._v("循环依赖报错：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322151017865.png",alt:"image-20220322151017865"}})])]),t._v(" "),s("li",[s("p",[t._v("只要能打破循环依赖的局面，然一个对象先初始化完就行了")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20220322151101204.png",alt:"image-20220322151101204"}})])]),t._v(" "),s("li",[s("p",[t._v("做法")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/demo223/pictures/master/img/image-20230214152850762.png",alt:"image-20230214152850762"}})])])]),t._v(" "),s("h2",{attrs:{id:"今日注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#今日注解"}},[t._v("#")]),t._v(" 今日注解")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("注解名称")]),t._v(" "),s("th",[t._v("位置")]),t._v(" "),s("th",[t._v("注解作用")]),t._v(" "),s("th",[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("@SpringBootApplication")]),t._v(" "),s("td",[t._v("引导类")]),t._v(" "),s("td",[t._v("标识 SpringBoot 程序入口")]),t._v(" "),s("td",[t._v("每个项目（module）只能有一个引导类")])]),t._v(" "),s("tr",[s("td",[t._v("@SpringBootTest")]),t._v(" "),s("td",[t._v("测试类")]),t._v(" "),s("td",[t._v("标注测试入口")]),t._v(" "),s("td",[t._v("与引导类要同包")])]),t._v(" "),s("tr",[s("td",[t._v("@Component")]),t._v(" "),s("td",[t._v("类")]),t._v(" "),s("td",[t._v("标注该注解的类由Spring管理")]),t._v(" "),s("td",[t._v("必须处于扫描范围内")])]),t._v(" "),s("tr",[s("td",[t._v("@Controller")]),t._v(" "),s("td",[t._v("类")]),t._v(" "),s("td",[t._v("同上，特定用于控制器类")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("@Service")]),t._v(" "),s("td",[t._v("类")]),t._v(" "),s("td",[t._v("同上，特定用于业务逻辑类")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("@Repository")]),t._v(" "),s("td",[t._v("类")]),t._v(" "),s("td",[t._v("同上，特定用于数据访问类")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("@ComponentScan")]),t._v(" "),s("td",[t._v("类")]),t._v(" "),s("td",[t._v("控制扫描范围")]),t._v(" "),s("td",[t._v("隐含在 @SpringBootApplication 中")])]),t._v(" "),s("tr",[s("td",[t._v("@Scope")]),t._v(" "),s("td",[t._v("类")]),t._v(" "),s("td",[t._v("控制 scope")]),t._v(" "),s("td",[t._v("取值常见的有 singleton 与 prototype")])]),t._v(" "),s("tr",[s("td",[t._v("@PostConstruct")]),t._v(" "),s("td",[t._v("成员方法")]),t._v(" "),s("td",[t._v("表示该方法为初始化方法")]),t._v(" "),s("td",[t._v("方法需无参，无返回值")])]),t._v(" "),s("tr",[s("td",[t._v("@PreDestroy")]),t._v(" "),s("td",[t._v("成员方法")]),t._v(" "),s("td",[t._v("表示该方法未销毁方法")]),t._v(" "),s("td",[t._v("方法需无参，无返回值")])]),t._v(" "),s("tr",[s("td",[t._v("@Lazy")]),t._v(" "),s("td",[t._v("类")]),t._v(" "),s("td",[t._v("表示该类延迟创建")]),t._v(" "),s("td",[t._v("用到时才会创建和初始化")])]),t._v(" "),s("tr",[s("td",[t._v("@Bean")]),t._v(" "),s("td",[t._v("成员方法")]),t._v(" "),s("td",[t._v("方法的返回结果由Spring管理")]),t._v(" "),s("td",[t._v("方法参数带按类型装配功能")])]),t._v(" "),s("tr",[s("td",[t._v("@Autowried")]),t._v(" "),s("td",[t._v("成员方法")]),t._v(" "),s("td",[t._v("方法参数根据类型装配")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("@Autowried")]),t._v(" "),s("td",[t._v("构造方法")]),t._v(" "),s("td",[t._v("方法参数根据类型装配")]),t._v(" "),s("td",[t._v("如果只有一个有参构造可以省略")])]),t._v(" "),s("tr",[s("td",[t._v("@Autowried")]),t._v(" "),s("td",[t._v("成员变量")]),t._v(" "),s("td",[t._v("成员变量根据类型装配")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("@Value")]),t._v(" "),s("td",[t._v("成员变量")]),t._v(" "),s("td",[t._v("成员变量根据 ${key} 找 value")]),t._v(" "),s("td",[t._v("键值信息存于 application 配置文件中")])]),t._v(" "),s("tr",[s("td",[t._v("@Value")]),t._v(" "),s("td",[t._v("参数")]),t._v(" "),s("td",[t._v("方法参数根据 ${key} 找 value")]),t._v(" "),s("td",[t._v("键值信息存于 application 配置文件中")])]),t._v(" "),s("tr",[s("td",[t._v("@ConfigurationProperties")]),t._v(" "),s("td",[t._v("类")]),t._v(" "),s("td",[t._v("类的成员与 key 绑定")]),t._v(" "),s("td",[t._v("键值信息存于 application 配置文件中")])]),t._v(" "),s("tr",[s("td",[t._v("@Data")]),t._v(" "),s("td",[t._v("类")]),t._v(" "),s("td",[t._v("生成空参构造/getter/setter/toString等方法")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("@Slf4j")]),t._v(" "),s("td",[t._v("类")]),t._v(" "),s("td",[t._v('生成log对象，log.info("")进行日志输出')]),t._v(" "),s("td")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);